---

const {
  anchor = false,
  block = false,
  buttonstyle = '3d',
  buttoncolor = 'blue',
  link,
  scale = '1',
  disabled = false,
  extraCls = '',
  ...attrs
} = Astro.props;

// Generate the CSS classes based on the props
const classes = [
  'rb-button',
  block && 'rb-button-block',
  buttonstyle && `rb-button-${buttonstyle}`,
  buttoncolor && `rb-button-${buttoncolor}`,
  extraCls
].filter(Boolean).join(' ');

// Determine the component type
const componentType = attrs.href || link ? 'a' : 'button';

// Define the smooth scroll directive replacement
const smoothScroll = anchor ? { updateHistory: false, offset: -250 } : null;
---

{componentType === 'a' ? (
  <a
    {...attrs}
    class={classes}
    style={`transform: scale(${scale});`}
    smooth-scroll={JSON.stringify(smoothScroll)}
    onclick={attrs.onClick}
    target="_blank"
  >
    <slot />
  </a>
) : (
  <button
    {...attrs}
    class={classes}
    style={`transform: scale(${scale});`}
    smooth-scroll={JSON.stringify(smoothScroll)}
    onclick={attrs.onClick}
    disabled={disabled}
  >
    <slot />
  </button>
)}

<style>

  .rb-button {
    --b-color-background: var(--rb-color-blue);
    --b-color-background-hover: var(--rb-color-blue-dark);
    --b-color-text: var(--rb-color-light);
    --b-color-shadow: var(--rb-color-dark);
    --b-color-borderwidth: 1px;
    --b-color-padding: 1rem;
    --b-color-hover: var(--rb-color-light);

    align-content: center;
    appearance: none;
    background-color: var(--b-color-background);
    border-color: var(--b-color-background);
    border-style: solid;
    border-width: var(--b-color-borderwidth);
    color: var(--b-color-text);
    cursor: pointer;
    display: inline-flex;
    font-family: var(--font-family);
    font-size: var(--base-font-size);
    font-variation-settings: var(--font-flex-bold);
    font-weight: 500;
    gap: var(--b-color-padding);
    justify-content: center;
    line-height: 1;
    padding: var(--b-color-padding);
    position: relative;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
  }

  .rb-button:hover {
    background-color: var(--b-color-background-hover);
    border-color: var(--b-color-background-hover);
    color: var(--b-color-hover);
  }

  .rb-button-3d {
    box-shadow: 4px 4px 0 var(--b-color-shadow);
  }

  .rb-button[disabled] {
    pointer-events: none;
    filter: grayscale(1);
    --b-color-background: var(--rb-color-gray);
  }

  .rb-button-block{
    display: block;
    width: 100%;
  }

  .rb-button-green {
    --b-color-background: var(--rb-color-green);
    --b-color-background-hover: var(--rb-color-green-dark);
  }

  .rb-button-pale-blue {
    --b-color-background: var(--rb-color-pale-blue);
    --b-color-background-hover: var(--rb-color-pale-blue-dark);
  }

  .rb-button-vivid-blue {
    --b-color-text: hsl(299, 0%, 0%);
    --b-color-background: var(--rb-color-vivid-blue);
    --b-color-background-hover: var(--rb-color-vivid-blue-dark);
  }

  .rb-button-violet{
    --b-color-background: var(--rb-color-violet);
    --b-color-background-hover: var(--rb-color-violet-dark);
  }

  .rb-button-white {
    --b-color-background: var(--rb-color-light);
    --b-color-background-hover: var(--rb-color-gray);
    --b-color-text: var(--rb-color-dark);
  }

  .rb-button-black {
    --b-color-background: var(--rb-color-dark);
  }

  .rb-button-accent-green{
    --b-color-background: var(--rb-color-green-accent);
    --b-color-background-hover: var(--rb-color-violet-dark);
    --b-color-text: var(--rb-color-dark);
    font-weight: 900;
  }
</style>