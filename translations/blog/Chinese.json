{
  "Hacked Johnny's Lab": "黑客约翰尼的实验室",
  "Hey there! PaTara on the line. There was a recent event “Hack Johnny’s Lab” by Robonomics and I believe I did hack it in a way! Apart from the very first try which I lost due to rules misunderstanding, I won every round I took part in and here is a short “howto” story.": "嘿！PaTara在这里。最近有一个由Robonomics举办的活动“黑客约翰尼的实验室”，我相信我以某种方式黑进去了！除了第一次由于规则误解而输掉之外，我参加的每一轮我都赢了，这里是一个简短的“如何”故事。",
  "There was a recent event “Hack Johnny’s Lab” by Robonomics and I believe I did hack it in a way! Apart from the very first try which I lost due to rules misunderstanding, I won every round I took part in and here is a short “howto” story.": "最近有一个由Robonomics举办的活动“黑客约翰尼的实验室”，我相信我以某种方式黑进去了！除了第一次由于规则误解而输掉之外，我参加的每一轮我都赢了，这里是一个简短的“如何”故事。",
  "I’m sort of familiar with programming and I have a decent laptop and almost no skill in image recognition. More than that,": "我对编程有点了解，我有一台体面的笔记本电脑，几乎没有图像识别技能。更重要的是，",
  "I decided to play it fairly, which means no video downloading, no playback speed abuse, no playbar navigation.": "我决定公平地玩，这意味着不下载视频，不滥用播放速度，不使用播放栏导航。",
  "So the picked strategy was a good old bruteforce. Sounds more hacking that anything.": "所以选择的策略是老式的暴力破解。听起来更像是黑客行为。",
  "(479’001’600 to be precise). Quite an amount to process!": "（准确地说是479’001’600）。要处理的数量相当可观！",
  "## Strategy 1: dumb and straightforward.": "## 策略1：愚蠢而直接。",
  "my 64 GB RAM! I got a SIGTERM error in the IDE console.": "我的64 GB RAM！在IDE控制台中出现了SIGTERM错误。",
  "Just an evaluative run. But the thing is: my laptop didn’t even spin its fans at max! A single core was loaded.": "只是一个评估性运行。但问题是：我的笔记本甚至没有将风扇转到最大转速！只有一个核心被加载。",
  "I googled a Python [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) package to load all": "我搜索了一个Python [multiprocessing](https://docs.python.org/3/library/multiprocessing.html)包，以加载我的CPU的所有逻辑核心（共20个）以并行计算。否则，这将是一次永恒的旅程。",
  "the logical cores of my CPU (20 of them) to parallel the computations. Otherwise, it would have been an eternal journey.": "但是为此我必须将我的迭代器分成12部分。itertools multiprocessing包可以一起工作，",
  "But with that I had to split my iterator in 12 parts. The itertools multiprocessing packages do work together,": "但当整个选项集在RAM中时。这不是我的情况，所以进行了以下操作：",
  "but when a whole set of options is in the RAM. That was not my case, so the following was performed:": "从那一刻起，我将使用这种策略使我的CPU负载监视器看起来像这样：",
  "From that moment and ever I would use this strategy to make my CPU load monitor look like this:": "我相信这将执行时间缩短到大约5秒。我找到了遍历组合的最佳方法，但组合太多了！第一步涉及在网络中执行大约4.8亿次外部操作。节点将简单地因为DDOS而禁止我，即使没有那样，也需要很长时间！",
  "I believe this shortened the execution time down to around 5 seconds. I got the best way to iterate through": "仅出于调试目的，我启动了脚本（用于节点通信我使用了一个",
  "the combinations but there were just too many of them! The first step involved performing roughly 480 millions": "[py-substrate-interface](https://pypi.org/project/substrate-interface/1.0.3/)包）并注意到在调用之前",
  "extrinsics in the network. The node would simply ban me for DDOS and even without that It would take forever!": "执行时我遇到了诸如_无效助记词短语_之类的错误。一个线索！如果我可以在本地验证组合，",
  "Just for a debugging reason I started the script (for node communication I used a": "我将节省大量时间！GitHub解析引导我到",
  "[py-substrate-interface](https://pypi.org/project/substrate-interface/1.0.3/) package) and noticed that prior to call": "[这里](https://github.com/polkascan/py-substrate-interface/blob/master/substrateinterface/keypair.py#L170)",
  "performing I got errors like _invalid mnemonic phrase_. A clue! If I could validate the combination on prem,": "代码行，并将组合验证添加到我的脚本中。这将将潜在外部操作的数量减少到大约3900万，快了12倍！",
  "I would save tons of time! GitHub parsing led me to": "但是，3900万次调用将永远禁止我，所以我需要更深入挖掘。我如何显着减少",
  "[this](https://github.com/polkascan/py-substrate-interface/blob/master/substrateinterface/keypair.py#L170)": "计算次数？嗯，稍微背叛我的初始策略。看，我本来打算避免观看视频，",
  "line of code and I added a combination validation to my script. This has reduced the number of potential extrinsics down": "“一个不需要视频的黑客”，但数学让我改变了主意。将其更改为快132倍的策略。",
  "to roughly 39’000’000 12 times faster!": "以下是解释：",
  "But still, 39 million calls would ban me forever, so I needed more digging. How could I significantly cut the": "这样我只需要知道短语中两个单词的正确位置（一个将花费太长时间，经过验证的实验）。",
  "number of calculations? Well, by a little bit betraying my initial strategy. See, I was going to avoid video watching,": "我将遍历10！组合，将两个单词插入正确的位置并验证短语，",
  "“a hacker, who won’t even need a video”, but the math made me change my mind. Change it to a 132 times faster strategy.": "将选项减少到大约30万，减少了很多！10！组合集适合我的RAM，太棒了！",
  "Below is the explanation:": "自己的本地Robonomics节点与链同步，并询问其结果账户地址余额！",
  "With that I only needed to know two correct positions of words in a phrase (one would take too long, experiment-validated).": "查询比外部操作“更容易”。整夜同步后（我设置了一个缓存限制，以便我的",
  "I would iterate through a 10! combinations, insert two words in correct positions and validate the phrase,": "笔记本电脑不会因为ROM中的链数据而爆炸），我尝试了一下，结果是灾难性的。网络事务",
  "cutting down the options to approximately 300’000 quite a decrease! More that, 10! combinations set fitted in my RAM, excellent!": "（即使在本地主机内）花费了太多时间。我甚至没有等到结束，显然比",
  "up my own local Robonomics node synchronized with the chain and ask it for a resulting account address balance!": "观看整个视频要慢得多。如果我只能知道账户的确切地址！但为此我需要助记词短语... **或者我真的需要吗？**",
  "Look. The rules say that the desired account has **exactly** 42 XRT. Why wouldn’t I get all the active addresses in the network,": "看。规则说���所需的帐户**恰好**有42个XRT。为什么我不能获得网络中的所有活动地址，",
  "filter them by having exactly 42 XRT and compare each generated address with a list of possible targets": "通过拥有恰好42个XRT来筛选它们，并将每个生成的地址与可能的目标列表进行比较",
  "(around 20, decreasing to 1 in the end). Easy to say and to do.": "（大约20个，最终减少到1个）。说起来容易做起来难。",
  "Now, after modifying my script once more I finally made it to only one query and one transaction which would for sure": "现在，再次修改我的脚本后，我终于只需要一个查询和一个交易就可以",
  "give me the desired prize.": "给我想要的奖品。",
  "Now, after I watched 25 seconds of the video (meanwhile filling in the words of a mnemonic),": "现在，我观看了25秒的视频（同时填写助记词的单词），",
  "I would only need 30 seconds at max to steal the reward. Hacked it.": "我只需要最多30秒就可以窃取奖励。已经破解了。",
  "What do we have here: a set of 12 words in a mixed order. This gives us 12! (factorial) options of phrases": "我们这里有���么：一个包含12个词的混合顺序集合。这给了我们12！（阶乘）短语选项",
  "Well, what else do I need, just go and sort through! But here is the first trick: 12! mnemonic phrases just didn’t fit in": "嗯，我还需要什么，就去整理一下！但这里有第一个技巧：12！助记短语根本不适用",
  "Also, rather than trying to transfer all the tokens each 300k times and calling a public node for that I decided to set": "而不是尝试每300k次转移所有令牌并为此调用公共节点，我决定设置",
  "Query is way “easier” than an extrinsic. After a whole night of synchronizing (I’ve set a cache limit so that my)": "查询比外部调用“更容易”。整夜同步后（我设置了缓存限制，以便我的",
  "(laptop won’t blow up with chain data in its ROM) I gave it a try and.. this was a disaster. Network transactions": "笔记本电脑不会因其ROM中的链数据而爆炸），我尝试了一下，结果是灾难性的。网络交易",
  "(even within a localhost) took too much time. I didn’t even wait till the end, it was obviously way slower than": "（即使在本地主机内部）花费太多时间。我甚至没有等到结束，显然比",
  "watching a whole video. If only I could know the exact address of the account! But for that I need a mnemonic phrase… **Or do I really?**": "看整个视频慢得多。如果我只能知道账户的确切地址！但为此我需要一个助记短语... **或者我真的需要吗？**"
}