(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{Cmrw:function(t,e,o){"use strict";o.r(e);var r=o("KHd+"),a=o("UQSp"),n=o("Kw5r");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}n.a.config.optionMergeStrategies;var s={VueRemarkRoot:a.a},c=function(t){var e=t.options.components=t.options.components||{},o=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render||"function"==typeof s[t]&&"function"==typeof s[t].options.render?e[t]=s[t]:o[t]=function(){return s[t]}}))},D=n.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",A={excerpt:null,title:"Testing Neon EVM with Robonomics Smart Contracts",date:"2022-10-03T00:00:00.000Z",published:!0,locale:"ru",tags:["Robonomics в Ethereum","Сотрудничество","Умные контракты","Neon"],cover_image:"../images/testing-neon-with-robonomics/blog_cover_neon_multi-agent.jpg",description:"Целью настоящего тестирования была проверка платформы Neon на предмет её готовности к production stage с помощью умных контрактов Robonomics, которые позволяют кибер-физическим системам (роботам) заключать сделки на выполнение заложенного в них алгоритма",abstract:""};var B=function(t){t.options[l]&&(t.options[l]=A),n.a.util.defineReactive(t.options,l,A),t.options.computed=D.computed({$frontmatter:function(){return t.options[l]}},t.options.computed)},d=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("VueRemarkRoot",[e("h2",{attrs:{id:"tldr"}},[e("a",{attrs:{href:"#tldr","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("TL;DR")]),e("p",[t._v("Целью настоящего тестирования была проверка платформы "),e("a",{attrs:{href:"https://neon-labs.org/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Neon")]),t._v(" на предмет её готовности к production stage с помощью умных контрактов Robonomics, которые позволяют кибер-физическим системам (роботам) заключать сделки на выполнение заложенного в них алгоритма.  ")]),e("p",[t._v("В сети Robonomics взаимодействие устанавливается между двумя сторонами: promisee - тот, кто заказывает услугу и передает техническое задание и средства на его исполнение; promisor - тот, кто исполняет услугу. Был проверен сценарий, когда контракт обязательства заключается между promisee и promisor с последующей валидацией результата работы третьей стороной и оплатой комиссии узлу, который сопроводил контракт между сторонами. ")]),e("p",[t._v("В качестве примера использовалась симуляция робота-манипулятора, которому предложили выполнить последовательность действий. Тестирование прошло успешно. ")]),e("h2",{attrs:{id:"цели-тестирования"}},[e("a",{attrs:{href:"#%D1%86%D0%B5%D0%BB%D0%B8-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Цели тестирования")]),e("p",[t._v("Инженеры "),e("a",{attrs:{href:"https://multi-agent.io/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Multi-Agent Systems")]),t._v(" работают с "),e("a",{attrs:{href:"https://robonomics.network/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Robonomics Network")]),t._v(" уже несколько лет. Первая реализация реализация Robonomics Network была создана для сети Ethereum. Она представляет собой набор smart contracts для межмашинного взаимодействия. ")]),e("p",[t._v("Ядром Robonomics Network является контракт "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/robonomics/Liability.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Liability")]),t._v(" — умный контракт, который воспроизводит типичные отношения между заказчиком какой-либо услуги (Promisee) и исполнителем услуги (Promisor), и включает в себя технические и экономические параметры сделки между ними. Сторонами могут выступать как автономный агент и человек (human-to-machine interaction), так и чисто два автономных агента (machine-to-machine interaction). Promisee и Promisor транслируют сообщения с параметрами их спроса и предложения, а затем заключение сделки обеспечивается специальным узлом — провайдером — который ищет совпадения этих параметров. Провайдеры управляются "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/robonomics/Lighthouse.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Lighthouse")]),t._v(" — специальным смарт-контрактом, который выполняет транзакцию, когда провайдер устанавливает рыночное соответствие между сторонами.")]),e("p",[t._v("Существуют три сценария, по которым может проходить исполнение обязательства:")]),e("ol",[e("li",[t._v("Простое обязательство (без проверки конечного результата и без комиссии провайдера за его работу)")]),e("li",[t._v("Обязательство с комиссией провайдеру")]),e("li",[t._v("Обязательство с комиссией провайдеру и с валидацией результатов с помощью третьей стороны — observing network.")])]),e("p",[t._v("Цель настоящего тестирования заключается в проверке самого сложного, третьего сценария Robonomics на платформе Neon EVM. ")]),e("h2",{attrs:{id:"описание-тестового-сценария"}},[e("a",{attrs:{href:"#%D0%BE%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE-%D1%81%D1%86%D0%B5%D0%BD%D0%B0%D1%80%D0%B8%D1%8F","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Описание тестового сценария")]),e("p",[t._v("В работе промышленных зон и инфраструктуре современных городов весьма вероятно появление полностью автоматизированных предприятий и служб, которые контролируются кибер-физическими системами (КФС), и которые предоставляют свои услуги, как автономные агенты. В связи с этим можно ожидать также и формирование сетей из автономных КФС с целью повышения скорости и качества коммуникации в процессе производства и оказания услуг. ")]),e("p",[t._v("Чтобы в полной мере воспользоваться возможностями умных контрактов был выбран сценарий взаимодействия двух автономных экономических агентов. Рассмотрим жизненный цикл обязательства в сети Robonomics: ")]),e("p",[e("g-image",{attrs:{src:o("gsZp"),alt:"Liability Life Cycle"}})],1),e("p",[t._v("На рисунке выше показано, что провайдер сети Robonomics обращается к контракту Lighthouse, который в свою очередь вызывает "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/robonomics/Factory.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("фабрику контрактов")]),t._v(" для создания контракта Liability. Последний содержит в себе данные о сделки, такие как техническое задание, оплату за услугу, адрес валидатора и deadline. ")]),e("p",[t._v("Чтобы узнать больше о возможных сценариях применения Robonomics ознакомтесь с нашими "),e("a",{attrs:{href:"https://wiki.robonomics.network/docs/en/r-and-d-based-on-robonomics-network/#launching-a-drone-under-the-control-of-a-decentralized-computer",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("R&D")])]),e("p",[t._v("Повторяя всю инфраструктуру Robonomics в сети Neon, мы реализуем сценарий запуска робота через Liability контракт, аналогичный этому "),e("a",{attrs:{href:"https://wiki.robonomics.network/docs/en/kuka/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("примеру")]),t._v(". Если получится повторить сценарий, значит все функции работают.")]),e("h2",{attrs:{id:"практические-результаты"}},[e("a",{attrs:{href:"#%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D1%80%D0%B5%D0%B7%D1%83%D0%BB%D1%8C%D1%82%D0%B0%D1%82%D1%8B","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Практические результаты")]),e("p",[t._v("Исходный код контрактов Robonomics доступен "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("здесь")]),t._v(".")]),e("p",[t._v("Контракты используют множество функций Ethereum VM и включают в себя ")]),e("ul",[e("li",[t._v("Токен ERC20 "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/robonomics/XRT.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("XRT")])]),e("li",[e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/robonomics/Factory.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Фабрику контрактов")])]),e("li",[t._v("Собственный контракт для "),e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/ens/ENS.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("ENS")])]),e("li",[e("a",{attrs:{href:"https://github.com/airalab/robonomics_contracts/blob/master/contracts/misc/SharedCode.sol",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Proxy")]),t._v(" для контрактов ")]),e("li",[t._v("Различные модификаторы и роли в контрактах")])]),e("p",[t._v("Адреса контрактов в devnet сети Neon "),e("a",{attrs:{href:"https://devnet.neonevm.org",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("https://devnet.neonevm.org")])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Contract Name")]),e("th",[t._v("Address")])])]),e("tbody",[e("tr",[e("td",[t._v("Migrations")]),e("td",[t._v("0x1DC538bE2C8572509a571B150f11aB55E52EF12E")])]),e("tr",[e("td",[t._v("ENS")]),e("td",[t._v("0xa7AEa12F60D0278F01e14DBC7cc459d04d051406")])]),e("tr",[e("td",[t._v("DutchAuction")]),e("td",[t._v("0xF44F8803548D72Dbc3E28340EFD7b5328aa4F058")])]),e("tr",[e("td",[t._v("Liability")]),e("td",[t._v("0xA694196351dc1488e3884eCc6b650F0d8D55346a")])]),e("tr",[e("td",[t._v("Lighthouse")]),e("td",[t._v("0x80FB5CC4c396E272b56700E6ffF5DBf4661013A8")])]),e("tr",[e("td",[t._v("XRT")]),e("td",[t._v("0x3322d7D99cF65Cab5A92073c928b5E9674af3c29")])]),e("tr",[e("td",[t._v("PublicAmbix")]),e("td",[t._v("0x85c03bE5ccFf11E79a0A776D183eF067590549d1")])]),e("tr",[e("td",[t._v("Factory")]),e("td",[t._v("0xCFa833bF0D46369D9024f95c9C8dFa1E4a07806C")])]),e("tr",[e("td",[t._v("PublicResolver")]),e("td",[t._v("0xAC9E9AA8A4cB524FE87f2b14489F1D6bE68dc46e")])])])]),e("p",[e("a",{attrs:{href:"https://github.com/Multi-Agent-io/neon-kuka-demo",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Исходный код")]),t._v(" подготовленного сценария ")]),e("h2",{attrs:{id:"изменения-внесенные-в-исходные-контракты"}},[e("a",{attrs:{href:"#%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B2%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%B2-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%B0%D0%BA%D1%82%D1%8B","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Изменения, внесенные в исходные контракты")]),e("p",[t._v("Контракты написаны для Solidity 0.5.0. Таким образом, никаких изменений при развертывании и использовании контрактов не требовалось.")]),e("h2",{attrs:{id:"процесс-тестирования"}},[e("a",{attrs:{href:"#%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Процесс тестирования")]),e("p",[t._v("В общем случае тест заключается в отправке соответствующих сообщений от одного и другого агента. ")]),e("p",[t._v("Дальше, исполнитель находит новый контракт обязательства в сети и начинает его исполнение. По завершению работы отправляется сообщение с результатом, которое записывается в контракт.")]),e("p",[t._v("Пошаговая инструкция по запуску находится в "),e("a",{attrs:{href:"https://github.com/Multi-Agent-io/neon-kuka-demo/blob/main/README.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("README.md")])]),e("h2",{attrs:{id:"результаты-тестирования"}},[e("a",{attrs:{href:"#%D1%80%D0%B5%D0%B7%D1%83%D0%BB%D1%8C%D1%82%D0%B0%D1%82%D1%8B-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Результаты тестирования")]),e("p",[t._v("Видео работы")]),e("div",{staticClass:"youtube-embed"},[e("div",{staticStyle:{width:"100%",margin:"0 auto"}},[e("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[e("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/fYJVF7KrNnI",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),e("p",[e("g-image",{attrs:{src:o("kxKK"),alt:"Liability"}})],1),e("p",[t._v("При запуске симуляции создаются сообщения оффера, а от клиента приходит сообщение деманда, после чего создается контракт Liability с помощью функции "),e("code",{pre:!0},[t._v("createLiability")]),t._v(" контракта Lighthouse. С помощью контракта XRT происходит перевод токенов с адреса заказчика на адрес контракта Liability. ")]),e("p",[t._v("После того, как в тестовой сети Neon был обнаружен новый контракт Liability, агент начинает работу. Результат работы (телеметрия) записывается в файл и отправляется в IPFS, хэш от файла сохраняется в качестве результата.")]),e("p",[t._v("После выполнения работы происходит финализация контракта Liability с помощью функции "),e("code",{pre:!0},[t._v("finalizeLiability()")]),t._v(" контракта Lighthouse и перевод токенов с адреса Liability на адреса исполнителя и валидатора.")]),e("p",[t._v("Успешное выполнение симуляции показали, что все контракты отработали правильно и решение на Neon EVM работает.")]),e("h2",{attrs:{id:"недостатки-платформы-neon"}},[e("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-%D0%BF%D0%BB%D0%B0%D1%82%D1%84%D0%BE%D1%80%D0%BC%D1%8B-neon","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Недостатки платформы Neon")]),e("h3",{attrs:{id:"truffle-завершается-с-ошибкой-если-не-получает-ответ-от-сети"}},[e("a",{attrs:{href:"#truffle-%D0%B7%D0%B0%D0%B2%D0%B5%D1%80%D1%88%D0%B0%D0%B5%D1%82%D1%81%D1%8F-%D1%81-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%BE%D0%B9-%D0%B5%D1%81%D0%BB%D0%B8-%D0%BD%D0%B5-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D0%B5%D1%82-%D0%BE%D1%82%D0%B2%D0%B5%D1%82-%D0%BE%D1%82-%D1%81%D0%B5%D1%82%D0%B8","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Truffle завершается с ошибкой, если не получает ответ от сети")]),e("p",[t._v("В процессе загрузки контрактов выяснилось, что proxy не всегда возвращает ответ вовремя, отчего Truffle завершается с ошибкой:")]),e("rb-code",[e("pre",[e("code",{pre:!0,attrs:{class:"language-sh"}},[t._v("TypeError: Cannot read properties of null (reading 'from')                                    \n    at Web3InterfaceAdapter.(<anonymous>) (/usr/lib/node_modules/truffle/build/webpack:/packages\n/interface-adapter/dist/adapter/web3/index.js:71:1)                                           \n    at Generator.next (<anonymous>)                                                          \n    at fulfilled (/usr/lib/node_modules/truffle/build/webpack:/packages/interface-adapter/dist\n/adapter/web3/index.js:5:43)                                                                  \n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\nTruffle v5.5.23 (core: 5.5.23)\nNode v16.14.0\n")])])]),e("p",[t._v("Не удалось найти зависимость между условиями тестирования и возникновением ошибки, но вероятнее всего Neon EVM не может отправить receipt транзакции, а Truffle не может обработать ответ Null. ")]),e("p",[t._v("Если здесь "),e("a",{attrs:{href:"https://github.com/trufflesuite/truffle/blob/develop/packages/interface-adapter/lib/adapter/web3/index.ts#L75",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("index.ts#L75")]),t._v(" добавить timeout и retry, то развертывание должно проходить без ошибок.")]),e("h3",{attrs:{id:"отсутствует-wswss-endpoint"}},[e("a",{attrs:{href:"#%D0%BE%D1%82%D1%81%D1%83%D1%82%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82-wswss-endpoint","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Отсутствует WS/WSS Endpoint")]),e("p",[t._v("У Neon EVM нет WS/WSS endpoint в отличие от Ethereum, что делает невозможным подписку на события из сети. Поэтому в ходе тестирования мы следили за событиями вручную.")]),e("h3",{attrs:{id:"нет-поименованных-событий"}},[e("a",{attrs:{href:"#%D0%BD%D0%B5%D1%82-%D0%BF%D0%BE%D0%B8%D0%BC%D0%B5%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D0%B9","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Нет поименованных событий")]),e("p",[t._v("Neon EVM возвращает довольно скудные описания событий после транзакции, например:")]),e("rb-code",[e("pre",[e("code",{pre:!0,attrs:{class:"language-sh"}},[t._v(" events: {\n    '0': {\n      address: '0xCFa833bF0D46369D9024f95c9C8dFa1E4a07806C',\n      transactionHash: '0x9894a984e6b3f6ce469c8837e11739f6e50d00216cf7c5bc3d32da106a58d50a',\n      transactionLogIndex: '0x1',\n      blockHash: '0x72040f317d3a469d30327d4e1def903790b70dbede46b4f0ea4f28f30a679a80',\n      blockNumber: 156073183,\n      transactionIndex: 0,\n      logIndex: 1,\n      id: 'log_e51e2f9f',\n      returnValues: Result {},\n      event: undefined,\n      signature: null,\n      raw: [Object]\n    },\n...\n")])])]),e("p",[t._v("Вместо 0, 1 и т.д. мы ожидали увидеть поименованные события.")]),e("h2",{attrs:{id:"заключение"}},[e("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Заключение")]),e("p",[t._v("На платформе Neon EVM был успешно проверен сценарий, когда контракт обязательства между promisee и promisor заключается с последующей валидацией результата работы третьей стороной. Дополнительно участвовал провайдер, который проверил совпадение спроса и предложения между сторонами, и получил за эту работу комиссию.")]),e("p",[t._v("Для демонстрации использовалась симуляция робота-манипулятора, которого наняли на выполнение последовательности действий. В качестве результата работы робот отправил файл с телеметрией, полученной во время выполнения задачи. ")]),e("p",[t._v("Несмотря на некоторые особенности в работе сети, в итоге все участвующие контракты показали свою работоспособность в среде Neon.")])],1)}),[],!1,null,null,null);"function"==typeof c&&c(d),"function"==typeof B&&B(d);e.default=d.exports},UQSp:function(t,e,o){"use strict";e.a={name:"VueRemarkRoot",render(t){return t("div",null,this.$slots.default)}}},gsZp:function(t,e){t.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/step-by-step-3.17d90ba.396cbff243f84218dd85dabaef62f8cb.jpg",size:{width:2467,height:1056},sizes:"(max-width: 2467px) 100vw, 2467px",srcset:["/assets/static/step-by-step-3.82a2fbd.396cbff243f84218dd85dabaef62f8cb.jpg 480w","/assets/static/step-by-step-3.cbab2cf.396cbff243f84218dd85dabaef62f8cb.jpg 1024w","/assets/static/step-by-step-3.2665e34.396cbff243f84218dd85dabaef62f8cb.jpg 1920w","/assets/static/step-by-step-3.17d90ba.396cbff243f84218dd85dabaef62f8cb.jpg 2467w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2467 1056' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4226da249e942bc2c1c729c79c92a82e'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='15'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4226da249e942bc2c1c729c79c92a82e)' width='2467' height='1056' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAbAEADASIAAhEBAxEB/8QAGQAAAgMBAAAAAAAAAAAAAAAAAgMAAQQI/8QAKRAAAgIBAgQGAgMAAAAAAAAAAQIAEQMSIQQiMVETMkFhocFCgVORsf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwDp48Mym8J8IHzAKDZ7y8OPKGDPkLrXl0gfcBuFQAaMSk7HckfRjsYbYMoG9bb/AEIC83CrkB5VVz%2bekE9PeLxcK%2bNiUyafQ0ii5qyAIAWZQPWwBEYG3YPmxMS21ACBpQEA71vCo35oDUUsL19aErIulbRdR7WBAYptRZlxGIE2HTQB05gYZUU/Q7QI9ohI1NXQCrMzvxJHXHmFHqaqasnl/Y/2LbGrDmUG96MBS5PGtXxsFAvnqjKU4gwICD3Hp8RxRQOg6Vv2g%2bBi/jX%2boB4jrUbmqh6B3%2bBBxgKwCihUZAHQO/wJNG1Wa/UKSB//2Q==' /%3e%3c/svg%3e"}},kxKK:function(t,e){t.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/liability.6c72980.d0c602396775c07d04cb242b33648784.jpg",size:{width:977,height:998},sizes:"(max-width: 977px) 100vw, 977px",srcset:["/assets/static/liability.82a2fbd.d0c602396775c07d04cb242b33648784.jpg 480w","/assets/static/liability.6c72980.d0c602396775c07d04cb242b33648784.jpg 977w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 977 998' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b099f946f2911b48f72ce44dbce02bd4'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='15'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b099f946f2911b48f72ce44dbce02bd4)' width='977' height='998' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCABBAEADASIAAhEBAxEB/8QAGgAAAgMBAQAAAAAAAAAAAAAAAAMCBAUBCP/EADQQAAIBAwIDBQcCBwEAAAAAAAECAwAEERIhBRMxMkFRkaEUIlJxgZLBYbEVIzNUYpPR4f/EABcBAQEBAQAAAAAAAAAAAAAAAAACAQP/xAAjEQEBAAIABQQDAAAAAAAAAAAAAQIRAxKBkcETITEyQeHw/9oADAMBAAIRAxEAPwD0tc3cHDWlmuEjiadgdWonWwAHhtsBSLfj1q8pRp4yWOFADdfDp499axZW7SsfmhrPveFWd7MJZlmDAY9wso9KyzbjxPVn011nnfhftuaIsT4L5O476bWNHwOyR1cNd5BB3lfupvGLm6hERszjJOrVA7/Lp0pJqaVMs9W5Tt/RoQc3S3OxnUcY7h3VnyycYHGUSKGzPDDjU7MeYNt9unWqtpLxebDc23ChveDW8ikj61t6xno32ms5fbUrpwuL8249/wBJ1XmiD3UMhhVjGTpctgrkYO3yp2seDfaa5rGRs32mqCjBFLMzSxq7KRpJGSNh0pKx3PtOY3AgDHKlv/PzU5LjlXJUyQKuctrfB6d1ciJNw51TADPZGUPp1oHwtIYxlVJ3Gc/rU8v8I86XbgmIHW3U9w8flTNJ%2bNvSg4C/wjzpVxci396VG0%2bKAt%2b1OCn429KVJCkkgWVRIuOjAEUCv4jB4S/6m/5TLe7iuGxHrBAz7yFf3rvsdt/bw/YKnHBFEcxRImfhUCgiyxu2Xh1HxKg0k26GQsrXCb9lGIXyq53mgUFGNrodgpy8ntISevzqFzcXcKhtKtk4wkLMR61eg/p/U/uakSB1IFBWtLvnQ6mjdGzghhj0NM5mZhhW6eFLFtbzMzyRRu2rqQDVbiMZgUeyI6MTvyhv9Rg0GhzP8H8qNe491vKqNhLMdSzc4nqCyHy7Iq0GPPQZbBB2K/nFAzlpk%2b4vlVYzILrlCFcDOWO34/NcD3Mk8oCSRiIgAEjTJkZ2OM43/TcUy3eUmQGLGD1LdT5dKzcg7AFMQIiBBJ328ajcWkFyqie1RwDkAgbVCC2guIzJNaIjOdwwyTg9TTo7O2jfVHBGrdMhcGkss3Aq0t4oEZYrdVXUdhipTQNIw0aYtu1pDGmWrZRv5fLwxGPzVCW/v040lqnDHezOM3XMAA2ydvSs5pra8cLluT8dF2G3KZ1usmfFAMeVMMSl1Oldv0plImmkS5hjWBnR85cHZMDO/wCKpBq9pvnUqKKAooooCiiigKi3bX60UUH/2Q==' /%3e%3c/svg%3e"}}}]);